<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Culture on My place to put things</title>
    <link>http://localhost:1313/tags/culture/</link>
    <description>Recent content in Culture on My place to put things</description>
    <generator>Hugo</generator>
    <language>en-gb</language>
    <lastBuildDate>Wed, 02 Aug 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/culture/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Saying the quiet part out loud</title>
      <link>http://localhost:1313/posts/saying-the-quiet-part-out-loud/</link>
      <pubDate>Wed, 02 Aug 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/saying-the-quiet-part-out-loud/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;img src=&#34;tweet.png&#34; alt=&#34;&#34; title=&#34;A tweet from @deathbybadger saying: &amp;quot;have started saying the subtext out loud in conversation eg. &amp;quot;by the way I&#39;m asking for reassurance&amp;quot; or &amp;quot;this look means I want you to put that down so we can talk&amp;quot; and honestly the success rate in getting what I want is much higher&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;“Saying the quiet part out loud” is a phrase I’ve just made up, to describe a method of building alignment on practices within a team. It’s the habit of stating why you are doing things a certain way, even when you would assume it’s obvious.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Does the software industry learn?</title>
      <link>http://localhost:1313/posts/does-the-software-industry-learn/</link>
      <pubDate>Mon, 24 Jan 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/does-the-software-industry-learn/</guid>
      <description>&lt;p&gt;&amp;ldquo;Institutional knowledge&amp;rdquo; - the information that a company collectively knows - is a familiar concept to anyone involved in hiring processes. When an individual leaves who has knowledge the organisation needs, companies will organise offboarding sessions to keep that knowledge within the institution. Maybe they&amp;rsquo;ll even try to hire someone with similar experience.&lt;/p&gt;&#xA;&lt;p&gt;Lots of companies similarly try to optimise for &amp;ldquo;Institutional learning&amp;rdquo;, especially smaller firms. This makes a lot of sense - smaller companies don&amp;rsquo;t have the resources to buy in extra experience, so they focus on rapidly expanding the experience of their existing employees. It also fits really well with the agile philosophy of fast development cycles to maximise your knowledge about customers&amp;rsquo; needs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Staying in one place doesn&#39;t mean standing still</title>
      <link>http://localhost:1313/posts/staying-in-one-place-doesnt-mean-standing-still/</link>
      <pubDate>Sat, 13 Mar 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/staying-in-one-place-doesnt-mean-standing-still/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/o-PO_-sm_gA?autoplay=0&amp;amp;controls=1&amp;amp;end=0&amp;amp;loop=0&amp;amp;mute=0&amp;amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;&gt;&lt;/iframe&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Talk given at &lt;a href=&#34;https://codebar.io/events/codebar-festival-2021-day-2&#34;&gt;Codebar Festival&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;If you wish to see my slides in their full glory, they are available &lt;a href=&#34;https://www.slideshare.net/TomRenner3/staying-in-one-place-doesnt-mean-standing-still-249738132&#34;&gt;on Slideshare&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>&#34;Efficiency&#34; is bad for your health, and your learning</title>
      <link>http://localhost:1313/posts/efficiency-is-bad-for-your-health/</link>
      <pubDate>Mon, 10 Jun 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/efficiency-is-bad-for-your-health/</guid>
      <description>&lt;p&gt;I used to stress a lot about the &amp;ldquo;efficiency&amp;rdquo; of how I was using up all the minutes in my day. I&amp;rsquo;d to cram in as much as possible into time. eg. read on a 10 minute train, write code in the half hour before bed, etc.&lt;/p&gt;&#xA;&lt;p&gt;While I stressed about it a lot, I never found that I did the &amp;ldquo;10x&amp;rdquo; things I read about that were supposed to emerge as a result of this extra &amp;ldquo;efficiency&amp;rdquo;. For example I have only finished one of the three side projects I started in 2016, despite promising myself that those wouldn&amp;rsquo;t take long.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The customer is always right</title>
      <link>http://localhost:1313/posts/the-customer-is-always-right/</link>
      <pubDate>Sat, 04 Feb 2017 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/the-customer-is-always-right/</guid>
      <description>&lt;p&gt;A theme of the last few books I&amp;rsquo;ve read has been user testing. Specifically, that it is completely unreasonable to suggest that you could produce a system that will work smoothly in production without first getting several actual human users unfamiliar with your system, from your clients or in a related industry, to road-test the system.&lt;/p&gt;&#xA;&lt;p&gt;I think anyone can see that this is a good idea. It&amp;rsquo;s far too easy to make assumptions about the users&amp;rsquo; requirements or use cases. Without user testing software would rarely solve the problems it was designed for.&lt;/p&gt;</description>
    </item>
    <item>
      <title>&#34;Full-stack&#34; and why I don&#39;t like it</title>
      <link>http://localhost:1313/posts/fullstack/</link>
      <pubDate>Mon, 10 Oct 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/fullstack/</guid>
      <description>&lt;p&gt;Last week I went to a jobs event, recruiting for my company. I was there on my own, and recruiting is a pretty new experience for me, so I was kinda excited about it. The attendees were a mix of graduates, bootcampers, and a few more senior developers, but mostly the crowd were looking for their first or second job. I enjoy going out and talking to people about their experiences with software &amp;ndash; I think breadth of knowledge is really valuable &amp;ndash; so I found it interesting seeing what other people are looking for in a job. I&amp;rsquo;ve only ever had one; maybe I&amp;rsquo;ve aimed for all the wrong things!&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
